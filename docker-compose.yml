version: '2'

services:

  reverse_proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: reverse_proxy
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      LAN_VIRTUAL_1:
        ipv4_address: "10.0.0.20"

  apache_WS_1:
    depends_on:
      - reverse_proxy
    container_name: apache_WS_1
    image: httpd:alpine
    volumes:
      - ./HTML:/usr/local/apache2/htdocs
    restart: always
    networks:
      LAN_VIRTUAL_1:
        ipv4_address: "10.0.0.21"

  apache_WS_2:
    depends_on:
      - reverse_proxy
    container_name: apache_WS_2
    image: httpd:alpine
    volumes:
      - ./HTML2:/usr/local/apache2/htdocs
    restart: always
    networks:
      LAN_VIRTUAL_2:
        ipv4_address: "10.0.1.21"

  router-nat1:
    build: 
      context: .
      dockerfile: router.Dockerfile
    container_name: router1
    privileged: true
    networks:
      LAN_VIRTUAL_1:
        ipv4_address: "10.0.0.225"

  client1:
    container_name: client1
    image: httpd:alpine
    restart: always
    networks:
      LAN_VIRTUAL_1:
        ipv4_address: "10.0.0.100"

networks:
  LAN_VIRTUAL_1:
    driver: bridge
    driver_opts:
      parent: eno1 
    ipam:
      config:
        - subnet: 10.0.0.0/24

  LAN_VIRTUAL_2:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.1.0/24
        
